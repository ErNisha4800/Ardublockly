// Do not edit this file; automatically generated by build.py.
'use strict';

/*
 Licensed under the Apache License, Version 2.0 (the "License"):
          http://www.apache.org/licenses/LICENSE-2.0
*/
Blockly.Arduino=new Blockly.Generator("Arduino");Blockly.Arduino.StaticTyping=new Blockly.StaticTyping;Blockly.Arduino.addReservedWords("Blockly,setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,integer,constants,floating,point,void,boolean,char,unsigned,byte,int,word,long,float,double,string,String,array,static,volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Arduino.ORDER_ATOMIC=0;Blockly.Arduino.ORDER_UNARY_POSTFIX=1;Blockly.Arduino.ORDER_UNARY_PREFIX=2;Blockly.Arduino.ORDER_MULTIPLICATIVE=3;Blockly.Arduino.ORDER_ADDITIVE=4;Blockly.Arduino.ORDER_SHIFT=5;Blockly.Arduino.ORDER_RELATIONAL=6;Blockly.Arduino.ORDER_EQUALITY=7;Blockly.Arduino.ORDER_BITWISE_AND=8;Blockly.Arduino.ORDER_BITWISE_XOR=9;Blockly.Arduino.ORDER_BITWISE_OR=10;Blockly.Arduino.ORDER_LOGICAL_AND=11;Blockly.Arduino.ORDER_LOGICAL_OR=12;Blockly.Arduino.ORDER_CONDITIONAL=13;
Blockly.Arduino.ORDER_ASSIGNMENT=14;Blockly.Arduino.ORDER_NONE=99;Blockly.Arduino.PinTypes={INPUT:"INPUT",OUTPUT:"OUTPUT",PWM:"PWM",SERVO:"SERVO",STEPPER:"STEPPER",SERIAL:"SERIAL",I2C:"I2C/TWI",SPI:"SPI"};Blockly.Arduino.DEF_FUNC_NAME=Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_;
Blockly.Arduino.init=function(a){Blockly.Arduino.includes_=Object.create(null);Blockly.Arduino.definitions_=Object.create(null);Blockly.Arduino.variables_=Object.create(null);Blockly.Arduino.codeFunctions_=Object.create(null);Blockly.Arduino.userFunctions_=Object.create(null);Blockly.Arduino.functionNames_=Object.create(null);Blockly.Arduino.setups_=Object.create(null);Blockly.Arduino.loopCode_=Object.create(null);Blockly.Arduino.pins_=Object.create(null);Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():
Blockly.Arduino.variableDB_=new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);var b=Blockly.Arduino.StaticTyping.collectVarsWithTypes(a);Blockly.Arduino.StaticTyping.setProcedureArgs(a,b);for(var c in b)Blockly.Arduino.addVariable(c,Blockly.Arduino.getArduinoType_(b[c])+" "+Blockly.Arduino.variableDB_.getName(c,Blockly.Variables.NAME_TYPE)+";")};
Blockly.Arduino.finish=function(a){var b=[],c=[],d=[],e=[],f;for(f in Blockly.Arduino.includes_)b.push(Blockly.Arduino.includes_[f]);b.length&&b.push("\n");for(f in Blockly.Arduino.variables_)d.push(Blockly.Arduino.variables_[f]);d.length&&d.push("\n");for(f in Blockly.Arduino.definitions_)c.push(Blockly.Arduino.definitions_[f]);c.length&&c.push("\n");for(f in Blockly.Arduino.codeFunctions_)e.push(Blockly.Arduino.codeFunctions_[f]);for(f in Blockly.Arduino.userFunctions_)e.push(Blockly.Arduino.userFunctions_[f]);
e.length&&e.push("\n");var g=[""],h="";void 0!==Blockly.Arduino.setups_.userSetupCode&&(h="\n"+Blockly.Arduino.setups_.userSetupCode,delete Blockly.Arduino.setups_.userSetupCode);for(f in Blockly.Arduino.setups_)g.push(Blockly.Arduino.setups_[f]);h&&g.push(h);h="";for(f in Blockly.Arduino.loopCode_)h+=Blockly.Arduino.loopCode_[f];delete Blockly.Arduino.includes_;delete Blockly.Arduino.definitions_;delete Blockly.Arduino.codeFunctions_;delete Blockly.Arduino.userFunctions_;delete Blockly.Arduino.functionNames_;
delete Blockly.Arduino.setups_;delete Blockly.Arduino.loopCode_;delete Blockly.Arduino.pins_;Blockly.Arduino.variableDB_.reset();b=b.join("\n")+d.join("\n")+c.join("\n")+e.join("\n");g="void setup() {"+g.join("\n  ")+"\n}\n\n";a="void loop() {\n  "+h.replace(/\n/g,"\n  ")+a.replace(/\n/g,"\n  ")+"\n}";return b+g+a};Blockly.Arduino.addInclude=function(a,b){void 0===Blockly.Arduino.includes_[a]&&(Blockly.Arduino.includes_[a]=b)};
Blockly.Arduino.addDeclaration=function(a,b){void 0===Blockly.Arduino.definitions_[a]&&(Blockly.Arduino.definitions_[a]=b)};Blockly.Arduino.addVariable=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.variables_[a])Blockly.Arduino.variables_[a]=b,d=!0;return d};Blockly.Arduino.addSetup=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.setups_[a])Blockly.Arduino.setups_[a]=b,d=!0;return d};Blockly.Arduino.addLoop=function(a,b){Blockly.Arduino.loopCode_[a]=b};
Blockly.Arduino.addFunction=function(a,b){if(void 0===Blockly.Arduino.codeFunctions_[a]){var c=Blockly.Arduino.variableDB_.getDistinctName(a,Blockly.Generator.NAME_TYPE);Blockly.Arduino.codeFunctions_[a]=b.replace(Blockly.Arduino.DEF_FUNC_NAME,c);Blockly.Arduino.functionNames_[a]=c}return Blockly.Arduino.functionNames_[a]};
Blockly.Arduino.reservePin=function(a,b,c,d){void 0!==Blockly.Arduino.pins_[b]?Blockly.Arduino.pins_[b]!=c?a.setWarningText(Blockly.Msg.ARD_PIN_WARN1.replace("%1",b).replace("%2",d).replace("%3",c).replace("%4",Blockly.Arduino.pins_[b]),d):a.setWarningText(null,d):(Blockly.Arduino.pins_[b]=c,a.setWarningText(null,d))};Blockly.Arduino.scrubNakedValue=function(a){return a+";\n"};Blockly.Arduino.quote_=function(a){a=a.replace(/"/g,'\\"');return'"'+a+'"'};
Blockly.Arduino.scrub_=function(a,b){var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=this.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=this.allNestedComments(d))&&(c+=this.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
Blockly.Arduino.getArduinoType_=function(a){switch(a.typeId){case Blockly.Types.SHORT_NUMBER.typeId:return"short";case Blockly.Types.NUMBER.typeId:return"int";case Blockly.Types.LARGE_NUMBER.typeId:return"long";case Blockly.Types.DECIMAL.typeId:return"float";case Blockly.Types.TEXT.typeId:return"String";case Blockly.Types.CHARACTER.typeId:return"char";case Blockly.Types.BOOLEAN.typeId:return"boolean";case Blockly.Types.NULL.typeId:return"void";case Blockly.Types.UNDEF.typeId:return"undefined";case Blockly.Types.CHILD_BLOCK_MISSING.typeId:return"int";
default:return"Invalid Blockly Type"}};Blockly.Arduino.noGeneratorCodeInline=function(){return["",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.noGeneratorCodeLine=function(){return""};Blockly.Arduino.Boards={};Blockly.Arduino.Boards.generateDigitalIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push([d.toString(),d.toString()]);return c};Blockly.Arduino.Boards.generateAnalogIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push(["A"+d.toString(),"A"+d.toString()]);return c};
Blockly.Arduino.Boards.duplicateBoardProfile=function(a,b,c,d){return{name:b,description:c||a.description,compilerFlag:d||a.compilerFlag,analogPins:a.analogPins,digitalPins:a.digitalPins,pwmPins:a.pwmPins,serial:a.serial,serialPins:a.serialPins,serialSpeed:a.serialSpeed,spi:a.spi,spiPins:a.spiPins,spiClockDivide:a.spiClockDivide,i2c:a.i2c,i2cPins:a.i2cPins,i2cSpeed:a.i2cSpeed,builtinLed:a.builtinLed,interrupt:a.interrupt}};Blockly.Arduino.Boards.profiles={};
Blockly.Arduino.Boards.profiles.uno={name:"Arduino Uno",description:"Arduino Uno standard compatible board",compilerFlag:"arduino:avr:uno",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","0"],["TX","1"]]},serialSpeed:[["300","300"],["600","600"],["1200",
"1200"],["2400","2400"],["4800","4800"],["9600","9600"],["14400","14400"],["19200","19200"],["28800","28800"],["31250","31250"],["38400","38400"],["57600","57600"],["115200","115200"]],spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","11"],["MISO","12"],["SCK","13"]]},spiClockDivide:[["2 (8MHz)","SPI_CLOCK_DIV2"],["4 (4MHz)","SPI_CLOCK_DIV4"],["8 (2MHz)","SPI_CLOCK_DIV8"],["16 (1MHz)","SPI_CLOCK_DIV16"],["32 (500KHz)","SPI_CLOCK_DIV32"],["64 (250KHz)","SPI_CLOCK_DIV64"],["128 (125KHz)","SPI_CLOCK_DIV128"]],
i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","A4"],["SCL","A5"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:[["BUILTIN_1","13"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.nano_328={name:"Arduino Nano 328",description:"Arduino Nano with ATmega328 board",compilerFlag:"arduino:avr:nano:cpu=atmega328",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,7),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,7)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.nano_168=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.nano_328,"Arduino Nano 168","Arduino Nano with ATmega168 compatible board","arduino:avr:nano:cpu=atmega168");
Blockly.Arduino.Boards.profiles.duemilanove_168p={name:"Arduino Nano 168p",description:"Arduino Duemilanove with ATmega168p compatible board",compilerFlag:"arduino:avr:diecimila:cpu=atmega168",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins,pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.duemilanove_328p=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.duemilanove_168p,"Arduino Duemilanove 328p","Arduino Duemilanove with ATmega328p compatible board","arduino:avr:diecimila");
Blockly.Arduino.Boards.profiles.mega={name:"Arduino Mega",description:"Arduino Mega-compatible board",compilerFlag:"arduino:avr:mega",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,15),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,53),pwmPins:Blockly.Arduino.Boards.generateDigitalIo(2,13).concat(Blockly.Arduino.Boards.generateDigitalIo(44,46)),serial:[["serial","Serial"],["serial_1","Serial1"],["serial_2","Serial2"],["serial_3","Serial3"]],serialPins:{Serial:[["TX","0"],["RX","1"]],
Serial1:[["TX","18"],["TX","19"]],Serial2:[["TX","16"],["TX","17"]],Serial3:[["TX","14"],["TX","15"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","51"],["MISO","50"],["SCK","52"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","20"],["SCL","21"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0",
"2"],["interrupt1","3"],["interrupt2","21"],["interrupt3","20"],["interrupt4","19"],["interrupt5","18"]]};
Blockly.Arduino.Boards.profiles.leonardo={name:"Arduino Leonardo",description:"Arduino Leonardo-compatible board",compilerFlag:"arduino:avr:leonardo",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5).concat([["A6","4"],["A7","6"],["A8","8"],["A9","9"],["A10","10"],["A11","12"]]),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins.concat([["13","13"]]),serial:Blockly.Arduino.Boards.profiles.uno.serial,
serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","ICSP-4"],["MISO","ICSP-1"],["SCK","ICSP-3"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","2"],["SCL","3"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0","3"],["interrupt1","2"],["interrupt2",
"0"],["interrupt3","1"],["interrupt4","17"]]};Blockly.Arduino.Boards.profiles.yun=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.leonardo,"Arduino Yun","Arduino Yun compatible board");
Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini={name:"Atmel atmega328p Xplained mini",description:"Atmel Xplained mini board with atmega328p (Uno compatible)",compilerFlag:"atmel:avr:atmega328p_xplained_mini",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins.concat([["20","20"]]),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,
serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_LED","13"]],interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt,builtinButton:[["BUILTIN_BUTTON","20"]]};
Blockly.Arduino.Boards.profiles.atmel_atmega328pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega328pb Xplained mini","Atmel Xplained mini board with atmega328pb (Arduino Uno compatible)","atmel:avr:atmega328pb_xplained_mini");
Blockly.Arduino.Boards.profiles.atmel_atmega168pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega168pb Xplained mini","Atmel Xplained mini board with atmega168pb (Arduino Uno compatible)","atmel:avr:atmega168pb_xplained_mini");
Blockly.Arduino.Boards.profiles.esp8266_huzzah={name:"Adafruit Feather HUZZAH",description:"Adafruit HUZZAH ESP8266 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["0","0"],["2","2"],["4","4"],["5","5"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"]],pwmPins:[["2","2"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI",
"13"],["MISO","12"],["SCK","14"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","4"],["SCL","5"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","0"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.esp8266_wemos_d1={name:"Wemos D1",description:"Wemos D1 R2 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],pwmPins:[["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","D7"],["MISO","D6"],["SCK","D5"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","D2"],["SCL","D1"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","D4"]],interrupt:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]]};
Blockly.Arduino.Boards.profiles.esp32_dev_module={name:"ESP32 Dev Module",description:"ESP32 Dev Module",compilerFlag:"esp32:esp32:esp32",analogPins:[["Analog-GPIO12","12"],["Analog-GPIO13","13"],["Analog-GPIO14","14"],["Analog-GPIO15","15"],["Analog-GPIO25","25"],["Analog-GPIO26","26"],["Analog-GPIO27","27"],["Analog-GPIO32","32"],["Analog-GPIO33","33"],["Analog-GPIO34","34"],["Analog-GPIO35","35"],["Analog-GPIO36","36"],["Analog-GPIO39","39"]],digitalPins:[["GPIO1","1"],["GPIO2","2"],["GPIO3","3"],
["GPIO4","4"],["GPIO5","5"],["GPIO12","12"],["GPIO13","13"],["GPIO14","14"],["GPIO15","15"],["GPIO16","16"],["GPIO17","17"],["GPIO18","18"],["GPIO19","19"],["GPIO21","21"],["GPIO22","22"],["GPIO23","23"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"],["GPIO34 (INPUT ONLY)","34"],["GPIO35 (INPUT ONLY)","35"],["GPIO36 (INPUT ONLY)","36"],["GPIO39 (INPUT ONLY)","39"]],pwmPins:[["GPIO1","1"],["GPIO2","2"],["GPIO3","3"],["GPIO4","4"],["GPIO5","5"],["GPIO13","13"],["GPIO14",
"14"],["GPIO15","15"],["GPIO16","16"],["GPIO17","17"],["GPIO18","18"],["GPIO19","19"],["GPIO21","21"],["GPIO22","22"],["GPIO23","23"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"]],serial:[["UART0","Serial"],["UART2","Serial2"]],serialPins:{Serial:[["UART0-RX-GPIO3","3"],["UART0-TX-GPIO1","1"]],Serial2:[["UART2-RX-GPIO16","16"],["UART2-TX-GPIO17","17"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI-GPIO23","23"],
["MISO-GPIO19","19"],["CLK-GPIO18","18"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:[["SDA-GPIO21","21"],["SCL-GPIO22","22"]],i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_LED_GPIO2","2"]],interrupt:[["GPIO5","5"],["GPIO13","13"],["GPIO14","14"],["GPIO15","15"],["GPIO16","16"],["GPIO17","17"],["GPIO18","18"],["GPIO19","19"],["GPIO21","21"],["GPIO22","22"],["GPIO23","23"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],
["GPIO32","32"],["GPIO33","33"]],touch:[["GPIO12","12"],["GPIO13","13"],["GPIO14","14"],["GPIO15","15"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"]],rtcGPIOs:[["GPIO12","12"],["GPIO13","13"],["GPIO14","14"],["GPIO15","15"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"]]};
Blockly.Arduino.Boards.profiles.esp32_lilygo_ttgo={name:"ESP32 Lilygo TTGO",description:"ESP32 Lilygo TTGO",compilerFlag:"esp32:esp32:esp32",analogPins:[["Analog-GPIO2","2"],["Analog-GPIO12","12"],["Analog-GPIO13","13"],["Analog-GPIO15","15"],["Analog-GPIO25","25"],["Analog-GPIO26","26"],["Analog-GPIO27","27"],["Analog-GPIO32","32"],["Analog-GPIO33","33"],["Analog-GPIO36","36"],["Analog-GPIO39","39"]],digitalPins:[["GPIO2","2"],["GPIO12","12"],["GPIO13","13"],["GPIO15","15"],["GPIO25","25"],["GPIO26",
"26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"],["GPIO36","36"],["GPIO37","37"],["GPIO38","38"],["GPIO39","39"]],pwmPins:[["GPIO2","2"],["GPIO12","12"],["GPIO13","13"],["GPIO15","15"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"],["GPIO36","36"],["GPIO37","37"],["GPIO38","38"],["GPIO39","39"]],serial:[["UART0","Serial"],["UART2","Serial2"]],serialPins:{Serial:[["UART0-RX-GPIO3","3"],["UART0-TX-GPIO1","1"]],Serial2:[["UART2-RX-GPIO16","16"],["UART2-TX-GPIO17",
"17"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI-GPIO26","26"],["MISO-GPIO27","27"],["CLK-GPIO25","25"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:[["SDA-GPIO21","21"],["SCL-GPIO22","22"]],i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_LED_GPIO1","1"]],interrupt:[["GPIO2","2"],["GPIO12","12"],["GPIO13","13"],["GPIO15","15"],["GPIO25","25"],["GPIO26","26"],
["GPIO27","27"],["GPIO32","32"],["GPIO33","33"],["GPIO36","36"],["GPIO37","37"],["GPIO38","38"],["GPIO39","39"]],touch:[["GPIO2","2"],["GPIO12","12"],["GPIO13","13"],["GPIO15","15"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"]],rtcGPIOs:[["GPIO12","12"],["GPIO13","13"],["GPIO14","14"],["GPIO15","15"],["GPIO25","25"],["GPIO26","26"],["GPIO27","27"],["GPIO32","32"],["GPIO33","33"]]};Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles.esp32_dev_module;
Blockly.Arduino.Boards.changeBoard=function(a,b){if(void 0===Blockly.Arduino.Boards.profiles[b])console.log("Tried to set non-existing Arduino board: "+b);else{Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles[b];for(var c=a.getAllBlocks(),d=0;d<c.length;d++){var e=c[d].updateFields;e&&e.call(c[d])}}};
Blockly.Arduino.Boards.refreshBlockFieldDropdown=function(a,b,c){var d=a.getField(b);b=d.getValue();c=Blockly.Arduino.Boards.selected[c];d.menuGenerator_=c;d=!1;for(var e=0;e<c.length;e++)b==c[e][1]&&(d=!0);d?a.setWarningText(null,"bPin"):a.setWarningText("The old pin value "+b+" is no longer available.","bPin")};Blockly.Arduino.colour={};Blockly.Arduino.colour_picker=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_random=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_rgb=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_blend=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.IO={};Blockly.Arduino.io_digitalwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_digitalread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Digital Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["digitalRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_builtin_led=function(a){var b=a.getFieldValue("BUILT_IN_LED"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Set LED");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);0>c||255<c?a.setWarningText("The analogue value set must be between 0 and 255","pwm_value"):a.setWarningText(null,"pwm_value");return"analogWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Analogue Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["analogRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.io_highlow=function(a){return[a.getFieldValue("STATE"),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_pulsein=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_pulsetimeout=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+", "+d+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.lists={};Blockly.Arduino.lists_create_empty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_create_with=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_repeat=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_length=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_isEmpty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_indexOf=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_getIndex=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.lists_setIndex=Blockly.Arduino.noGeneratorCodeLine;Blockly.Arduino.logic={};Blockly.Arduino.controls_if=function(a){var b=0,c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e="if ("+c+") {\n"+d+"}";for(b=1;b<=a.elseifCount_;b++)c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e+=" else if ("+c+") {\n"+d+"}";a.elseCount_&&(d=Blockly.Arduino.statementToCode(a,"ELSE"),e+=" else {\n"+d+"}");return e+"\n"};
Blockly.Arduino.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c="=="==b||"!="==b?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,d=Blockly.Arduino.valueToCode(a,"A",c)||"0";a=Blockly.Arduino.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Arduino.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"&&":"||",c="&&"==b?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,d=Blockly.Arduino.valueToCode(a,"A",c)||"false";a=Blockly.Arduino.valueToCode(a,"B",c)||"false";if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};
Blockly.Arduino.logic_negate=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(a,"BOOL",b)||"false"),b]};Blockly.Arduino.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.logic_null=function(a){return["NULL",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.logic_ternary=function(a){var b=Blockly.Arduino.valueToCode(a,"IF",Blockly.Arduino.ORDER_CONDITIONAL)||"false",c=Blockly.Arduino.valueToCode(a,"THEN",Blockly.Arduino.ORDER_CONDITIONAL)||"null";a=Blockly.Arduino.valueToCode(a,"ELSE",Blockly.Arduino.ORDER_CONDITIONAL)||"null";return[b+" ? "+c+" : "+a,Blockly.Arduino.ORDER_CONDITIONAL]};Blockly.Arduino.loops={};Blockly.Arduino.controls_repeat=function(a){var b=Number(a.getFieldValue("TIMES")),c=Blockly.Arduino.statementToCode(a,"DO");c=Blockly.Arduino.addLoopTrap(c,a.id);a=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);return"for (int "+a+" = 0; "+a+" < "+b+"; "+a+"++) {\n"+c+"}\n"};
Blockly.Arduino.controls_repeat_ext=function(a){var b=Blockly.Arduino.valueToCode(a,"TIMES",Blockly.Arduino.ORDER_ADDITIVE)||"0",c=Blockly.Arduino.statementToCode(a,"DO");c=Blockly.Arduino.addLoopTrap(c,a.id);a="";var d=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),e=b;b.match(/^\w+$/)||Blockly.isNumber(b)||(e=Blockly.Arduino.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE),a+="int "+e+" = "+b+";\n");return a+("for (int "+d+" = 0; "+d+" < "+
e+"; "+d+"++) {\n"+c+"}\n")};Blockly.Arduino.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Arduino.valueToCode(a,"BOOL",b?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO");d=Blockly.Arduino.addLoopTrap(d,a.id);b&&(c.match(/^\w+$/)||(c="("+c+")"),c="!"+c);return"while ("+c+") {\n"+d+"}\n"};
Blockly.Arduino.controls_for=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",d=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",e=Blockly.Arduino.valueToCode(a,"BY",Blockly.Arduino.ORDER_ASSIGNMENT)||"1",f=Blockly.Arduino.statementToCode(a,"DO");f=Blockly.Arduino.addLoopTrap(f,a.id);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var g=
parseFloat(c)<=parseFloat(d);a="for ("+b+" = "+c+"; "+b+(g?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseFloat(e));a=(1==b?a+(g?"++":"--"):a+((g?" += ":" -= ")+b))+(") {\n"+f+"}\n")}else a="",g=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.Arduino.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),a+="int "+g+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.Arduino.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),a+="int "+c+" = "+d+";\n"),d=Blockly.Arduino.variableDB_.getDistinctName(b+
"_inc",Blockly.Variables.NAME_TYPE),a+="int "+d+" = ",a=Blockly.isNumber(e)?a+(Math.abs(e)+";\n"):a+("abs("+e+");\n"),a=a+("if ("+g+" > "+c+") {\n")+(Blockly.Arduino.INDENT+d+" = -"+d+";\n"),a+="}\n",a+="for ("+b+" = "+g+";\n     "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+";\n     "+b+" += "+d+") {\n"+f+"}\n";return a};Blockly.Arduino.controls_forEach=Blockly.Arduino.noGeneratorCodeLine;
Blockly.Arduino.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};Blockly.Arduino.map={};Blockly.Arduino.base_map=function(a){var b=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"DMAX",Blockly.Arduino.ORDER_ATOMIC)||"0";return["map("+b+", 0, 1024, 0, "+a+")",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.math={};Blockly.Arduino.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));Infinity==a?a="INFINITY":-Infinity==a&&(a="-INFINITY");return[a,Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.Arduino.valueToCode(a,"A",b)||"0";a=Blockly.Arduino.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:["Math.pow("+d+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b)return a=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"0","-"==a[0]&&(a=" "+a),["-"+a,Blockly.Arduino.ORDER_UNARY_PREFIX];a="ABS"==b||"ROUND"==b.substring(0,5)?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0":"SIN"==b||"COS"==b||"TAN"==b?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0":Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||
"0";switch(b){case "ABS":var c="abs("+a+")";break;case "ROOT":c="sqrt("+a+")";break;case "LN":c="log("+a+")";break;case "EXP":c="exp("+a+")";break;case "POW10":c="pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="ceil("+a+")";break;case "ROUNDDOWN":c="floor("+a+")";break;case "SIN":c="sin("+a+" / 180 * Math.PI)";break;case "COS":c="cos("+a+" / 180 * Math.PI)";break;case "TAN":c="tan("+a+" / 180 * Math.PI)"}if(c)return[c,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(b){case "LOG10":c=
"log("+a+") / log(10)";break;case "ASIN":c="asin("+a+") / M_PI * 180";break;case "ACOS":c="acos("+a+") / M_PI * 180";break;case "ATAN":c="atan("+a+") / M_PI * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constant=function(a){return{PI:["M_PI",Blockly.Arduino.ORDER_UNARY_POSTFIX],E:["M_E",Blockly.Arduino.ORDER_UNARY_POSTFIX],GOLDEN_RATIO:["(1 + sqrt(5)) / 2",Blockly.Arduino.ORDER_MULTIPLICATIVE],SQRT2:["M_SQRT2",Blockly.Arduino.ORDER_UNARY_POSTFIX],SQRT1_2:["M_SQRT1_2",Blockly.Arduino.ORDER_UNARY_POSTFIX],INFINITY:["INFINITY",Blockly.Arduino.ORDER_ATOMIC]}[a.getFieldValue("CONSTANT")]};
Blockly.Arduino.math_number_property=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return a=Blockly.Arduino.addFunction("mathIsPrime",["boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(int n) {","  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  if (n == 2 || n == 3) {\n    return true;\n  }\n  // False if n is NaN, negative, is 1.\n  // And false if n is divisible by 2 or 3.\n  if (isnan(n) || (n <= 1) || (n == 1) || (n % 2 == 0) || (n % 3 == 0)) {\n    return false;\n  }\n  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for (int x = 6; x <= sqrt(n) + 1; x += 6) {\n    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\n      return false;\n    }\n  }\n  return true;\n}"].join("\n")),
Blockly.Arduino.addInclude("math","#include <math.h>"),[a+"("+b+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":Blockly.Arduino.addInclude("math","#include <math.h>");d="(floor("+b+") == "+b+")";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",d=b+" % "+a+" == 0"}return[d,Blockly.Arduino.ORDER_EQUALITY]};
Blockly.Arduino.math_change=function(a){var b=Blockly.Arduino.valueToCode(a,"DELTA",Blockly.Arduino.ORDER_ADDITIVE)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" += "+b+";\n"};Blockly.Arduino.math_round=Blockly.Arduino.math_single;Blockly.Arduino.math_trig=Blockly.Arduino.math_single;Blockly.Arduino.math_on_list=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.math_modulo=function(a){var b=Blockly.Arduino.valueToCode(a,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constrain=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"0",c=Blockly.Arduino.valueToCode(a,"LOW",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"HIGH",Blockly.Arduino.ORDER_NONE)||"0";return["("+b+" < "+c+" ? "+c+" : ( "+b+" > "+a+" ? "+a+" : "+b+"))",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_random_int=function(a){var b=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_NONE)||"0";var c=Blockly.Arduino.variableDB_.getDistinctName("math_random_int",Blockly.Generator.NAME_TYPE);Blockly.Arduino.math_random_int.random_function=c;return[Blockly.Arduino.addFunction("mathRandomInt",["int "+Blockly.Arduino.DEF_FUNC_NAME+"(int min, int max) {","  if (min > max) {\n    // Swap min and max to ensure min is smaller.\n    int temp = min;\n    min = max;\n    max = temp;\n  }\n  return min + (rand() % (max - min + 1));\n}"].join("\n"))+
"("+b+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.math_random_float=function(a){return["(rand() / RAND_MAX)",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.motordriver={};
Blockly.Arduino.l298n_setup=function(a){var b=a.getFieldValue("MotorA_enA"),c=a.getFieldValue("MotorA_in1"),d=a.getFieldValue("MotorA_in2"),e=a.getFieldValue("MotorB_in3"),f=a.getFieldValue("MotorB_in4"),g=a.getFieldValue("MotorB_enB"),h=a.getFieldValue("pwm_channel_a"),k=a.getFieldValue("freq_a"),m=a.getFieldValue("resolution_a"),l=a.getFieldValue("pwm_channel_b"),p=a.getFieldValue("freq_b"),n=a.getFieldValue("resolution_b");Blockly.Arduino.addVariable("MotorA_enA","int PIN_MotorA_enA = "+b+";",
!0);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode(PIN_MotorA_enA, OUTPUT);",!1);var q=Math.pow(2,parseInt(m,10))-1,r="ledcAttachPin(PIN_MotorA_enA, "+h+");";Blockly.Arduino.addSetup("pwm_setup_"+h,"ledcSetup("+h+", "+k+", "+m+");\n  ledcWrite("+(h+", "+q+");"),!0);Blockly.Arduino.addSetup("pwm_attach_"+b,r,!0);Blockly.Arduino.addVariable("MotorA_in1","int PIN_MotorA_in1 = "+c+";",!0);Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,
"Digital Write");Blockly.Arduino.addSetup("io_"+c,"pinMode(PIN_MotorA_in1, OUTPUT);",!1);Blockly.Arduino.addVariable("MotorA_in2","int PIN_MotorA_in2 = "+d+";",!0);Blockly.Arduino.reservePin(a,d,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+d,"pinMode(PIN_MotorA_in2, OUTPUT);",!1);Blockly.Arduino.addVariable("MotorB_in3","int PIN_MotorB_in3 = "+e+";",!0);Blockly.Arduino.reservePin(a,e,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+
e,"pinMode(PIN_MotorB_in3, OUTPUT);",!1);Blockly.Arduino.addVariable("MotorB_in4","int PIN_MotorB_in4 = "+f+";",!0);Blockly.Arduino.reservePin(a,f,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+f,"pinMode(PIN_MotorB_in4, OUTPUT);",!1);Blockly.Arduino.addVariable("MotorB_enB","int PIN_MotorB_enB = "+g+";",!0);Blockly.Arduino.reservePin(a,g,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+g,"pinMode(PIN_MotorB_enB, OUTPUT);",!1);a=Math.pow(2,
parseInt(n,10))-1;b="ledcAttachPin(PIN_MotorB_enB, "+l+");";Blockly.Arduino.addSetup("pwm_setup_"+l,"ledcSetup("+l+", "+p+", "+n+");\n  ledcWrite("+(l+", "+a+");"),!0);Blockly.Arduino.addSetup("pwm_attach_"+g,b,!0);return""};
Blockly.Arduino.l298n_move=function(a){var b=a.getFieldValue("motor_select");a=a.getFieldValue("movement");var c="";"MotorA"==b?"stop"==a?c='digitalWrite(PIN_MotorA_in1, LOW);\ndigitalWrite(PIN_MotorA_in2, LOW);\nSerial.println("Motor A stopped!");\n':"forward"==a?c='digitalWrite(PIN_MotorA_in1, HIGH);\ndigitalWrite(PIN_MotorA_in2, LOW);\nSerial.println("Motor A forward!");\n':"backward"==a&&(c='digitalWrite(PIN_MotorA_in1, LOW);\ndigitalWrite(PIN_MotorA_in2, HIGH);\nSerial.println("Motor A backward!");\n'):
"MotorB"==b&&("stop"==a?c='digitalWrite(PIN_MotorB_in3, LOW);\ndigitalWrite(PIN_MotorB_in4, LOW);\nSerial.println("Motor B stopped!");\n':"forward"==a?c='digitalWrite(PIN_MotorB_in3, HIGH);\ndigitalWrite(PIN_MotorB_in4, LOW);\nSerial.println("Motor B forward!");\n':"backward"==a&&(c='digitalWrite(PIN_MotorB_in3, LOW);\ndigitalWrite(PIN_MotorB_in4, HIGH);\nSerial.println("Motor B backward!");\n'));return c};Blockly.Arduino.mqtt={};
Blockly.Arduino.mqtt_server_connect=function(a){var b=a.getFieldValue("MQTT Server"),c=a.getFieldValue("MQTT Server Port"),d=Blockly.Arduino.valueToCode(a,"MQTT Client name",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a,"MQTT Client name variable",Blockly.Arduino.ORDER_ATOMIC),f=a.getFieldValue("MQTT User");a=a.getFieldValue("MQTT Password");b='const char* mqtt_server = "'+b+'";';c=""==c?"const int mqtt_port = 1883;":"const int mqtt_port = "+c+";";if(""==e){var g="const char* mqtt_client_name;";
d="String mqtt_client_name_str = "+d+";\n  mqtt_client_name = mqtt_client_name_str.c_str();"}else g="const char* mqtt_client_name;\nString "+(e+";"),d=e+" = "+d+";\n  const char* mqtt_client_name = "+(e+".c_str();");e='const char* mqtt_user = "'+f+'";';a='const char* mqtt_password = "'+a+'";';var h='Serial.print("Connecting to MQTT Server");\n  while (!client.connected()) {\n    Serial.print(".");\n';h=(""==f?h+"    if(client.connect(mqtt_client_name))\n":h+"    if(client.connect(mqtt_client_name, mqtt_user, mqtt_password))\n")+
'      Serial.println("\\nMQTT connected!");\n    else {\n      Serial.print("\\nMQTT Connection failed with state: ");\n      Serial.println(client.state());\n      delay(2000);\n    }\n  }';Blockly.Arduino.addInclude("mqtt","#include <PubSubClient.h>");Blockly.Arduino.addVariable("mqtt_server",b,!0);Blockly.Arduino.addVariable("mqtt_server_port",c,!0);Blockly.Arduino.addVariable("mqtt_client_name",g,!0);Blockly.Arduino.addVariable("mqtt_user",e,!0);Blockly.Arduino.addVariable("mqtt_password",a,
!0);Blockly.Arduino.addVariable("WiFiClient","WiFiClient espClient;",!0);Blockly.Arduino.addVariable("PubSubClient","PubSubClient client(espClient);",!0);Blockly.Arduino.addSetup("mqtt_SetClientName",d,!0);Blockly.Arduino.addSetup("mqtt_SetServer","client.setServer(mqtt_server, mqtt_port);",!0);Blockly.Arduino.addSetup("mqtt_Connect",h,!0);return""};
Blockly.Arduino.mqtt_publish=function(a){a=Blockly.Arduino.valueToCode(this,"MQTT_topic",Blockly.Arduino.ORDER_ATOMIC);var b=Blockly.Arduino.valueToCode(this,"MQTT_message",Blockly.Arduino.ORDER_ATOMIC);return"client.publish(String("+a+").c_str(), String("+b+").c_str());\n"};
Blockly.Arduino.mqtt_subscribe_function=function(a){var b=Blockly.Arduino.statementToCode(a,"MQTT_Subscribe_Blocks");b=Blockly.Arduino.addLoopTrap(b,a.id);Blockly.Arduino.addFunction("mqtt_callback_function","void mqtt_callback(char* topic, byte* message_byte, unsigned int length) {\n  char* tmp_message = (char*) calloc(length+1,sizeof(char));\n  for (int z = 0; z < length; z++){\n    tmp_message[z] = (char)message_byte[z];\n  }\n  tmp_message[length] = '\\0'; //set null char as end of string\n  String message = String(tmp_message);\n"+b+
"}");Blockly.Arduino.addSetup("mqtt_setcallback","client.setCallback(mqtt_callback);",!0);return""};
Blockly.Arduino.mqtt_subscribe=function(a){var b=Blockly.Arduino.valueToCode(a,"MQTT_topic",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.statementToCode(a,"MQTT_topic_actions");a="if (strcmp(topic, "+b+") == 0){\n"+(a+"}\n");var c="client.subscribe(String("+b+").c_str());\n  Serial.println(\"Subscribed to MQTT topic '"+(b.replace(/"/g,"")+"'\");");Blockly.Arduino.addSetup("mqtt_subscribe_"+b,c,!0);return a};Blockly.Arduino.mqtt_subscribe_get_content=function(a){return"client.loop();\n"};Blockly.Arduino.oled={};
Blockly.Arduino.oled_display_initialize=function(a){var b=a.getFieldValue("i2c_address"),c=a.getFieldValue("sda");a=a.getFieldValue("scl");b="SSD1306Wire display("+b+", "+c+", "+a+");";Blockly.Arduino.addInclude("I2C_Wire","#include <Wire.h>");Blockly.Arduino.addInclude("OLED_SSD1306Wire",'#include "SSD1306Wire.h"');Blockly.Arduino.addVariable("oled_init",b,!0);Blockly.Arduino.addVariable("oled_y_position","int OLED_current_y_pos = 0;",!0);Blockly.Arduino.addSetup("oled_setup","display.init();\n  display.setColor(WHITE);\n  display.setTextAlignment(TEXT_ALIGN_LEFT);",
!0);Blockly.Arduino.addLoop("oled_clear","display.clear();\ndelay(10);\nOLED_current_y_pos = 0;\n",!0);return""};
Blockly.Arduino.oled_display_text=function(a){var b=Blockly.Arduino.valueToCode(a,"text_to_display",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("font_size");b="display.setFont(ArialMT_Plain_"+a+");\ndisplay.drawString(0, OLED_current_y_pos, "+(b+");\ndisplay.display();\n");"10"==a?b+="OLED_current_y_pos += 11;\n":"16"==a?b+="OLED_current_y_pos += 17;\n":"24"==a&&(b+="OLED_current_y_pos += 25;\n");return b};
Blockly.Arduino.oled_display_clear=function(a){Blockly.Arduino.addVariable("oled_y_position","int OLED_current_y_pos = 0;",!1);return"display.clear();\ndelay(10);\nOLED_current_y_pos = 0;\n"};
Blockly.Arduino.tft_spi_display_initialize=function(a){Blockly.Arduino.addInclude("I2C_Wire","#include <Wire.h>");Blockly.Arduino.addInclude("SPI","#include <SPI.h>");Blockly.Arduino.addInclude("TFT_eSPI","#include <TFT_eSPI.h>");Blockly.Arduino.addVariable("tft_init","TFT_eSPI tft = TFT_eSPI(TFT_WIDTH, TFT_HEIGHT);",!0);Blockly.Arduino.addVariable("tft_y_position","int TFT_current_y_pos = 0;",!0);Blockly.Arduino.addSetup("tft_setup","tft.init();\n  tft.setRotation(0);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE);\n  tft.setTextSize(1);\n  tft.setCursor(0, 0);\n  if (TFT_BL > 0) {\n    pinMode(TFT_BL, OUTPUT);\n    digitalWrite(TFT_BL, TFT_BACKLIGHT_ON);\n  }\n",
!0);return""};Blockly.Arduino.tft_set_fill_color=function(a){return"tft.fillScreen("+a.getFieldValue("fill_color")+");\nTFT_current_y_pos = 0;\n"};Blockly.Arduino.tft_set_text_color=function(a){var b=a.getFieldValue("text_color");a=a.getFieldValue("background_color");return"tft.setTextColor("+b+", "+a+");\n"};Blockly.Arduino.tft_set_rotation=function(a){return"tft.setRotation("+a.getFieldValue("rotation")+");\n"};
Blockly.Arduino.tft_display_text=function(a){var b=Blockly.Arduino.valueToCode(a,"text_to_display",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("font_size");b="tft.setTextSize("+a+");\ntft.drawString("+(b+", 0, TFT_current_y_pos);\n");"1"==a?b+="TFT_current_y_pos += 11;\n\n":"2"==a?b+="TFT_current_y_pos += 21;\n\n":"3"==a?b+="TFT_current_y_pos += 31;\n\n":"4"==a?b+="TFT_current_y_pos += 41;\n\n":"5"==a&&(b+="TFT_current_y_pos += 51;\n\n");return b};Blockly.Arduino.procedures={};
Blockly.Arduino.procedures_defreturn=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=Blockly.Arduino.statementToCode(a,"STACK");Blockly.Arduino.STATEMENT_PREFIX&&(c=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,"'"+a.id+"'"),Blockly.Arduino.INDENT)+c);Blockly.Arduino.INFINITE_LOOP_TRAP&&(c=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+a.id+"'")+c);var d=Blockly.Arduino.valueToCode(a,"RETURN",Blockly.Arduino.ORDER_NONE)||
"";d&&(d="  return "+d+";\n");for(var e=[],f=0;f<a.arguments_.length;f++)e[f]=Blockly.Arduino.getArduinoType_(a.getArgType(a.arguments_[f]))+" "+Blockly.Arduino.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);f=Blockly.Types.NULL;a.getReturnType&&(f=a.getReturnType());f=Blockly.Arduino.getArduinoType_(f);c=f+" "+b+"("+e.join(", ")+") {\n"+c+d+"}";c=Blockly.Arduino.scrub_(a,c);Blockly.Arduino.userFunctions_[b]=c;return null};Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn;
Blockly.Arduino.procedures_callreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return[b+"("+c.join(", ")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.procedures_callnoreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return b+"("+c.join(", ")+");\n"};
Blockly.Arduino.procedures_ifreturn=function(a){var b="if ("+(Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false")+") {\n";a.hasReturnValue_?(a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"null",b+="  return "+a+";\n"):b+="  return;\n";return b+"}\n"};
Blockly.Arduino.arduino_functions=function(a){var b=Blockly.Arduino.statementToCode(a,"SETUP_FUNC");b&&Blockly.Arduino.addSetup("userSetupCode",b,!0);a=a.getInputTargetBlock("LOOP_FUNC");b=Blockly.Arduino.blockToCode(a);if(!goog.isString(b))throw'Expecting code from statement block "'+a.type+'".';return b};Blockly.Arduino.pwm={};Blockly.Arduino.pwm_setup=function(a){var b=a.getFieldValue("pwm_channel"),c=a.getFieldValue("freq");a=a.getFieldValue("resolution");Blockly.Arduino.addSetup("pwm_setup_"+b,"ledcSetup("+b+", "+c+", "+a+");",!0);return""};Blockly.Arduino.pwm_to_pin=function(a){var b=a.getFieldValue("pwm_channel");a=a.getFieldValue("pwm_pin");Blockly.Arduino.addSetup("pwm_attach_"+a,"ledcAttachPin("+a+", "+b+");",!0);return""};
Blockly.Arduino.pwm_set_dutycycle=function(a){var b=a.getFieldValue("pwm_channel");a=a.getFieldValue("duty_cycle");return"ledcWrite("+b+", "+a+");"};Blockly.Arduino.sensors={};
Blockly.Arduino.i2c_scanner=function(a){Blockly.Arduino.addInclude("I2C_Wire","#include <Wire.h>");Blockly.Arduino.addSetup("I2C_start","Wire.begin();",!0);Blockly.Arduino.addSetup("I2C_scan_start","i2c_scan();\n",!0);Blockly.Arduino.addFunction("I2C_scanner",'void i2c_scan() {\n  byte error, address = 0;\n  int count_devices = 0;\n  Serial.println("I2C Scan Results:");\n  for (address = 1; address < 127; address++){\n    Wire.beginTransmission(address);\n    error = Wire.endTransmission();\n    if(error == 0){\n      Serial.print("I2C device found at address 0");\n      (address < 16) ? Serial.print("x0") : Serial.print("x");\n      Serial.println(address, HEX);\n      count_devices++;\n    }\n    if(error == 4){\n      Serial.print("ERROR ");\n      Serial.print(error, HEX);\n      Serial.print(" at address 0");\n      (address < 16) ? Serial.print("x0") : Serial.print("x");\n      Serial.println(address, HEX);\n    }\n  }\n  (count_devices == 0) ? Serial.println("No I2C devices found!\\n") : Serial.println("");\n}');return""};
Blockly.Arduino.bme280_initialize=function(a){Blockly.Arduino.addVariable("BME280","BME280I2C bme;",!0);Blockly.Arduino.addInclude("I2C_Wire","#include <Wire.h>");Blockly.Arduino.addInclude("BME280I2C","#include <BME280I2C.h>");Blockly.Arduino.addSetup("I2C_start","Wire.begin();",!0);Blockly.Arduino.addSetup("bme280_check_sensor",'while(!bme.begin())\n  {\n    Serial.println("Could not find BME280 or BMP280 sensor! Loop - Checking again in 2 seconds!");\n    delay(2000);\n  }\n',!0);Blockly.Arduino.addSetup("bme280_detect_sensor_type",
'switch(bme.chipModel())\n  {\n    case BME280::ChipModel_BME280:\n      Serial.println("Found BME280 sensor!");\n      break;\n    case BME280::ChipModel_BMP280:\n      Serial.println("Found BMP280 sensor! No Humidity available.");\n      break;\n    default:\n      Serial.println("Found UNKNOWN sensor! Error!");\n  }',!0);return""};
Blockly.Arduino.bme280_measure=function(a){var b=Blockly.Arduino.valueToCode(a,"temperature",Blockly.Arduino.ORDER_ATOMIC),c=a.getFieldValue("Temp_unit"),d=Blockly.Arduino.valueToCode(a,"humidity",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a,"pressure",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("Press_unit");return b="BME280::TempUnit tempUnit(BME280::TempUnit_"+c+");\nBME280::PresUnit presUnit(BME280::PresUnit_"+(a+");\nbme.read(")+(e+", "+b+", "+d+", tempUnit, presUnit);\n")};
Blockly.Arduino.mpu6050_initialize=function(a){var b=a.getFieldValue("set_accelerometer"),c=a.getFieldValue("set_gyroscope"),d=a.getFieldValue("set_calibration");Blockly.Arduino.addVariable("MPU6050_sensor_values","int16_t mpu6050_gyro_x = 0, mpu6050_gyro_y = 0, mpu6050_gyro_z = 0, mpu6050_temp_raw = 0, mpu6050_acc_x = 0, mpu6050_acc_y = 0, mpu6050_acc_z = 0;",!0);Blockly.Arduino.addVariable("MPU6050_sensor_offsets","int mpu6050_gyro_offset_x = 0, mpu6050_gyro_offset_y = 0, mpu6050_gyro_offset_z = 0, mpu6050_acc_init_x = 0, mpu6050_acc_init_y = 0, mpu6050_acc_init_z = 0;",
!0);Blockly.Arduino.addVariable("MPU6050_sensor_angles","float mpu6050_acc_init_pitch_angle = 0, mpu6050_acc_init_roll_angle = 0, mpu6050_acc_pitch_angle = 0, mpu6050_acc_roll_angle = 0, mpu6050_gyro_pitch_angle = 0, mpu6050_gyro_roll_angle = 0, mpu6050_gyro_yaw_angle = 0;",!0);switch(c){case "0":Blockly.Arduino.addVariable("MPU6050_gyro_scale","float mpu6050_GYRO_SCALE = 131.0;",!0);break;case "1":Blockly.Arduino.addVariable("MPU6050_gyro_scale","float mpu6050_GYRO_SCALE = 65.5;",!0);break;case "2":Blockly.Arduino.addVariable("MPU6050_gyro_scale",
"float mpu6050_GYRO_SCALE = 32.8;",!0);break;case "3":Blockly.Arduino.addVariable("MPU6050_gyro_scale","float mpu6050_GYRO_SCALE = 16.4;",!0)}Blockly.Arduino.addVariable("MPU6050_gyro_start","unsigned long mpu6050_start_time = 0;",!0);a="void MPU6050_setup(){\n  Wire.beginTransmission(0x68);\n  Wire.write(0x6B);\n  Wire.write(0x00);\n  Wire.endTransmission();\n  Wire.beginTransmission(0x68);\n  Wire.write(0x1B);\n  ";switch(c){case "0":a+="Wire.write(0b00000);\n  ";break;case "1":a+="Wire.write(0b01000);\n  ";
break;case "2":a+="Wire.write(0b10000);\n  ";break;case "3":a+="Wire.write(0b11000);\n  "}a+="Wire.endTransmission();\n  Wire.beginTransmission(0x68);\n  Wire.write(0x1C);\n  ";switch(b){case "0":a+="Wire.write(0b00000);\n  ";break;case "1":a+="Wire.write(0b01000);\n  ";break;case "2":a+="Wire.write(0b10000);\n  ";break;case "3":a+="Wire.write(0b11000);\n  "}a+="Wire.endTransmission();\n}\n";b='void MPU6050_calibrate(){\n  long sum_mpu6050_gyro_x = 0, sum_mpu6050_gyro_y = 0, sum_mpu6050_gyro_z = 0, sum_mpu6050_acc_x = 0, sum_mpu6050_acc_y = 0, sum_mpu6050_acc_z = 0;\n\n  long calibration = 0;\n  Serial.println("Starting MPU6050 calibration in 5 seconds. Don\'t move during calibration.");\n  delay(5000);\n  Serial.println("Starting MPU6050 calibration now...");\n  for (calibration = 0; calibration < '+
(d+"; calibration++){\n    MPU6050_measure();\n    sum_mpu6050_gyro_x += mpu6050_gyro_x;\n    ");b+="sum_mpu6050_gyro_y += mpu6050_gyro_y;\n    ";b+="sum_mpu6050_gyro_z += mpu6050_gyro_z;\n    ";b+="sum_mpu6050_acc_x += mpu6050_acc_x;\n    ";b+="sum_mpu6050_acc_y += mpu6050_acc_y;\n    ";b+="sum_mpu6050_acc_z += mpu6050_acc_z;\n  }\n  ";b+='Serial.println("Finished MPU6050 calibration!");\n\n  ';b+="mpu6050_gyro_offset_x = int(sum_mpu6050_gyro_x / calibration);\n  ";b+="mpu6050_gyro_offset_y = int(sum_mpu6050_gyro_y / calibration);\n  ";
b+="mpu6050_gyro_offset_z = int(sum_mpu6050_gyro_z / calibration);\n  ";b+="mpu6050_acc_init_x = int(sum_mpu6050_acc_x / calibration);\n  ";b+="mpu6050_acc_init_y = int(sum_mpu6050_acc_y / calibration);\n  ";b+="mpu6050_acc_init_z = int(sum_mpu6050_acc_z / calibration);\n\n  ";b+="mpu6050_acc_init_pitch_angle = atan2(mpu6050_acc_init_x, mpu6050_acc_init_z)*360/(2*PI);\n  ";b+="mpu6050_acc_init_roll_angle = atan2(mpu6050_acc_init_y, mpu6050_acc_init_z)*360/(2*PI);\n  ";b+="mpu6050_gyro_pitch_angle += mpu6050_acc_init_pitch_angle;\n  ";
b+="mpu6050_gyro_roll_angle += mpu6050_acc_init_roll_angle;\n\n  ";b+="mpu6050_start_time = millis();\n}\n";Blockly.Arduino.addInclude("math","#include <math.h>");Blockly.Arduino.addInclude("I2C_Wire","#include <Wire.h>");Blockly.Arduino.addSetup("I2C_start","Wire.begin();",!0);Blockly.Arduino.addSetup("MPU6050_initialize","MPU6050_setup();\n  MPU6050_calibrate();",!0);Blockly.Arduino.addFunction("MPU6050_setup",a);Blockly.Arduino.addFunction("MPU6050_measure","void MPU6050_measure(){\n  Wire.beginTransmission(0x68);\n  Wire.write(0x3B);\n  Wire.endTransmission();\n  Wire.requestFrom(0x68,14);\n  while(Wire.available() < 14);\n  mpu6050_acc_x = Wire.read()<<8|Wire.read();\n  mpu6050_acc_y = Wire.read()<<8|Wire.read();\n  mpu6050_acc_z = Wire.read()<<8|Wire.read();\n  mpu6050_temp_raw = Wire.read()<<8|Wire.read();\n  mpu6050_gyro_x = Wire.read()<<8|Wire.read();\n  mpu6050_gyro_y = Wire.read()<<8|Wire.read();\n  mpu6050_gyro_z = Wire.read()<<8|Wire.read();\n\n  mpu6050_gyro_x -= mpu6050_gyro_offset_x;\n  mpu6050_gyro_y -= mpu6050_gyro_offset_y;\n  mpu6050_gyro_z -= mpu6050_gyro_offset_z;\n\n  (abs(mpu6050_gyro_x) < mpu6050_GYRO_SCALE) ? mpu6050_gyro_x = 0 : true;\n  (abs(mpu6050_gyro_y) < mpu6050_GYRO_SCALE) ? mpu6050_gyro_y = 0 : true;\n  (abs(mpu6050_gyro_z) < mpu6050_GYRO_SCALE) ? mpu6050_gyro_z = 0 : true;\n}\n");
Blockly.Arduino.addFunction("MPU6050_calibrate",b);return""};
Blockly.Arduino.mpu6050_calc_angles=function(a){var b=a.getFieldValue("set_gyro_trust"),c=Blockly.Arduino.valueToCode(a,"acc_pitch_angle",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"acc_roll_angle",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a,"gyro_pitch_angle",Blockly.Arduino.ORDER_ATOMIC),f=Blockly.Arduino.valueToCode(a,"gyro_roll_angle",Blockly.Arduino.ORDER_ATOMIC),g=Blockly.Arduino.valueToCode(a,"gyro_yaw_angle",Blockly.Arduino.ORDER_ATOMIC);a="void MPU6050_calc_angles(float mpu6050_GYRO_TRUST){\n  float elapsed_sec = 0;\n  mpu6050_GYRO_TRUST /= 100;\n  float mpu6050_ACC_TRUST = 1 - mpu6050_GYRO_TRUST;\n\n  mpu6050_acc_pitch_angle = atan2(mpu6050_acc_x, mpu6050_acc_z)*360/(2*PI);\n  mpu6050_acc_roll_angle = atan2(mpu6050_acc_y, mpu6050_acc_z)*360/(2*PI);\n\n  elapsed_sec = float(millis() - mpu6050_start_time)/1000;\n  mpu6050_start_time = millis();\n  mpu6050_gyro_pitch_angle -= mpu6050_gyro_y * elapsed_sec / mpu6050_GYRO_SCALE;\n  mpu6050_gyro_roll_angle += mpu6050_gyro_x * elapsed_sec / mpu6050_GYRO_SCALE;\n  mpu6050_gyro_yaw_angle += mpu6050_gyro_z * elapsed_sec / mpu6050_GYRO_SCALE;\n\n  mpu6050_gyro_pitch_angle += mpu6050_gyro_roll_angle * sin(mpu6050_gyro_z * elapsed_sec / mpu6050_GYRO_SCALE * (2*PI) / 360);\n  mpu6050_gyro_roll_angle -= mpu6050_gyro_pitch_angle * sin(mpu6050_gyro_z * elapsed_sec / mpu6050_GYRO_SCALE * (2*PI) / 360);\n  mpu6050_gyro_pitch_angle = (mpu6050_gyro_pitch_angle * mpu6050_GYRO_TRUST) + (mpu6050_acc_pitch_angle * mpu6050_ACC_TRUST);\n  mpu6050_gyro_roll_angle = (mpu6050_gyro_roll_angle * mpu6050_GYRO_TRUST) + (mpu6050_acc_roll_angle * mpu6050_ACC_TRUST);\n\n";
""!=c&&(a+="  "+c+" = mpu6050_acc_pitch_angle;\n");""!=d&&(a+="  "+d+" = mpu6050_acc_roll_angle;\n");""!=e&&(a+="  "+e+" = mpu6050_gyro_pitch_angle;\n");""!=f&&(a+="  "+f+" = mpu6050_gyro_roll_angle;\n");""!=g&&(a+="  "+g+" = mpu6050_gyro_yaw_angle;\n");a+="}\n";b="MPU6050_calc_angles("+b+");\n";Blockly.Arduino.addInclude("math","#include <math.h>");Blockly.Arduino.addFunction("MPU6050_calc_angles",a);return b};Blockly.Arduino.mpu6050_measure=function(a){return"MPU6050_measure();\n"};
Blockly.Arduino.mpu6050_store_raw=function(a){var b=Blockly.Arduino.valueToCode(a,"acc_x",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"acc_y",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"acc_z",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a,"gyro_x",Blockly.Arduino.ORDER_ATOMIC),f=Blockly.Arduino.valueToCode(a,"gyro_y",Blockly.Arduino.ORDER_ATOMIC),g=Blockly.Arduino.valueToCode(a,"gyro_z",Blockly.Arduino.ORDER_ATOMIC),h=a.getFieldValue("set_temperature");
a=Blockly.Arduino.valueToCode(a,"temperature",Blockly.Arduino.ORDER_ATOMIC);var k="";""!=b&&(k+=b+" = mpu6050_acc_x;\n");""!=c&&(k+=c+" = mpu6050_acc_y;\n");""!=d&&(k+=d+" = mpu6050_acc_z;\n");""!=e&&(k+=e+" = mpu6050_gyro_x;\n");""!=f&&(k+=f+" = mpu6050_gyro_y;\n");""!=g&&(k+=g+" = mpu6050_gyro_z;\n");"Celsius"==h&&""!=a?k+=a+" = (mpu6050_temp_raw + (340*40) - 521) / 340.0;\n":"Fahrenheit"==h&&""!=a&&(k+=a+" = (((mpu6050_temp_raw + (340*40) - 521) / 340.0)* 9 / 5) + 32;\n");Blockly.Arduino.addInclude("math",
"#include <math.h>");return k};Blockly.Arduino.serial={};Blockly.Arduino.serial_print=function(a){for(var b=a.getFieldValue("SERIAL_ID"),c=Blockly.Arduino.valueToCode(a,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"0",d="TRUE"==a.getFieldValue("NEW_LINE"),e=Blockly.Arduino.Boards.selected.serialPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SERIAL,"SERIAL "+e[f][0]);return d?b+".println("+c+");\n":b+".print("+c+");\n"};
Blockly.Arduino.serial_setup=function(a){var b=a.getFieldValue("SERIAL_ID");a=a.getFieldValue("SPEED");Blockly.Arduino.addSetup("serial_"+b,b+".begin("+a+");",!0);return""};Blockly.Arduino.servo={};Blockly.Arduino.servo_write=function(a){var b=a.getFieldValue("SERVO_PIN"),c=Blockly.Arduino.valueToCode(a,"SERVO_ANGLE",Blockly.Arduino.ORDER_ATOMIC)||"90",d="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Write");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+d+";");Blockly.Arduino.addSetup("servo_"+b,d+".attach("+b+");",!0);return d+".write("+c+");\n"};
Blockly.Arduino.servo_read=function(a){var b=a.getFieldValue("SERVO_PIN"),c="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Read");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+c+";");Blockly.Arduino.addSetup("servo_"+b,c+".attach("+b+");",!0);return[c+".read()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.spi={};
Blockly.Arduino.spi_setup=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SHIFT_ORDER"),d=a.getFieldValue("SPI_CLOCK_DIVIDE");a=a.getFieldValue("SPI_MODE");Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_order",b+".setBitOrder("+c+");",!0);Blockly.Arduino.addSetup("spi_mode",b+".setDataMode("+a+");",!0);Blockly.Arduino.addSetup("spi_div",b+".setClockDivider("+d+");",!0);Blockly.Arduino.addSetup("spi_begin",b+".begin();",!0);return""};
Blockly.Arduino.spi_transfer=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_begin",b+".begin();",!1);for(var e=Blockly.Arduino.Boards.selected.spiPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SPI,"SPI "+e[f][0]);"none"!==c&&(Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,
"SPI Slave pin"),Blockly.Arduino.addSetup("io_"+c,"pinMode("+c+", OUTPUT);",!1));a=[];"none"!==c&&a.push("digitalWrite("+c+", HIGH);");a.push(b+".transfer("+d+");");"none"!==c&&a.push("digitalWrite("+c+", LOW);");return a.join("\n")+"\n"};
Blockly.Arduino.spi_transfer_return=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.spi_transfer(a);return["none"===c?b+".transfer("+d+")":Blockly.Arduino.addFunction("spiReturnSlave"+c,["int "+Blockly.Arduino.DEF_FUNC_NAME+"() {","  int spiReturn = 0;","  digitalWrite("+c+", HIGH);","  spiReturn = "+b+".transfer("+d+");","  digitalWrite("+c+", LOW);","  return spiReturn;\n}"].join("\n"))+
"()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.stepper={};
Blockly.Arduino.stepper_config=function(a){var b=Blockly.Arduino.PinTypes.STEPPER,c=a.getFieldValue("STEPPER_NAME"),d=a.getFieldValue("STEPPER_NUMBER_OF_PINS"),e=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"360",f=Blockly.Arduino.valueToCode(a,"STEPPER_SPEED",Blockly.Arduino.ORDER_ATOMIC)||"90",g=[a.getFieldValue("STEPPER_PIN1"),a.getFieldValue("STEPPER_PIN2")];"FOUR"===d&&(g.push(a.getFieldValue("STEPPER_PIN3")),g.push(a.getFieldValue("STEPPER_PIN4")));d="int "+c+
"["+g.length+"] = {";e="Stepper stepper_"+c+"("+e+", ";for(var h=0;h<g.length;h++)Blockly.Arduino.reservePin(a,g[h],b,"Stepper"),d+=g[h]+", ",e+=g[h]+", ";d=d.slice(0,-2)+"};";e=e.slice(0,-2)+");";Blockly.Arduino.addVariable(c,d,!0);c="stepper_"+c;Blockly.Arduino.addInclude("stepper","#include <Stepper.h>");Blockly.Arduino.addDeclaration(c,e);Blockly.Arduino.addSetup(c,c+".setSpeed("+f+");",!0);return""};
Blockly.Arduino.stepper_step=function(a){var b="stepper_"+a.getFieldValue("STEPPER_NAME");a=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"0";return b+".step("+a+");\n"};Blockly.Arduino.text={};Blockly.Arduino.text=function(a){return[Blockly.Arduino.quote_(a.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_join=function(a){if(0==a.itemCount_)return['""',Blockly.Arduino.ORDER_ATOMIC];if(1==a.itemCount_)return["String("+(Blockly.Arduino.valueToCode(a,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];var b=[];for(var c=0;c<a.itemCount_;c++){var d=Blockly.Arduino.valueToCode(a,"ADD"+c,Blockly.Arduino.ORDER_NONE);b[c]=""==d?'""':"String("+d+")"}b=b.join(" + ");return[b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_append=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return b+" += "+(""==a?'""':"String("+a+")")+";\n"};Blockly.Arduino.text_length=function(a){return["String("+(Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+").length()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_isEmpty=function(a){var b=[];b.push("boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");b.push("  if (msg.length() == 0) {");b.push("    return true;");b.push("  } else {");b.push("    return false;");b.push("  }");b.push("}");b=Blockly.Arduino.addFunction("isStringEmpty",b.join("\n"));a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[b+"("+(""==a?'""':"String("+a+")")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_trim=function(a){Blockly.Arduino.text_trim.OPERATORS={LEFT:".trim()",RIGHT:".trim()",BOTH:".trim()"};var b=a.getFieldValue("MODE");b=Blockly.Arduino.text_trim.OPERATORS[b];a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[(""==a?'""':"String("+a+")")+b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_print=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1];Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE);return b+".print("+(""==a?'""':"String("+a+")")+");\n"};
Blockly.Arduino.text_prompt_ext=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1],c=a.getFieldValue("TYPE"),d=[],e=c==Blockly.Types.NUMBER.output;e?d.push("int "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {"):d.push("String "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");d.push("  "+b+".println(msg);");d.push("  boolean stringComplete = false;");e?d.push("  int content = 0;"):d.push('  String content = "";');d.push("  while (stringComplete == false) {");d.push("    if ("+b+".available()) {");
e?(d.push("      content = "+b+".parseInt();"),d.push("      stringComplete = true;")):(d.push("      char readChar = (char)"+b+".read();"),d.push("      if (readChar == '\\n' || readChar == '\\r') {"),d.push("        stringComplete = true;"),d.push("      } else {"),d.push("        content += readChar;"),d.push("      }"));d.push("    }");d.push("  }");d.push("  // Empty incoming serial buffer");d.push("  while(Serial.available()) { Serial.read(); };");d.push("  return content;");d.push("}");c=Blockly.Arduino.addFunction("getUserInputPrompt"+
c,d.join("\n"));Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE)||'""';return[c+"("+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_endString=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_indexOf=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_charAt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_getSubstring=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_changeCase=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_prompt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_compare=function(a){var b=Blockly.Arduino.valueToCode(a,"string_a",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"string_b",Blockly.Arduino.ORDER_ATOMIC);a=a.getFieldValue("comparison");b=0!=b.indexOf('"')||0!=b.indexOf("cut_text")?b+".c_str()":b;c=0!=c.indexOf('"')||0!=c.indexOf("cut_text")?c+".c_str()":c;return["strcmp("+b+", "+c+") "+a,Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_cut_delimiter=function(a){var b=Blockly.Arduino.valueToCode(a,"string",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"delimiters",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable("text_to_cut_global","char* text_to_cut_global;",!0);Blockly.Arduino.addVariable("text_delimiter_global","char* text_delimiter_global;",!0);Blockly.Arduino.addFunction("cut_text_function","char* cut_text(String original_text, String delimiter) {\n  text_to_cut_global = (char*) calloc(String(original_text).length(),sizeof(char));\n  strcpy(text_to_cut_global, original_text.c_str());\n  text_delimiter_global = (char*) calloc(String(delimiter).length(),sizeof(char));\n  strcpy(text_delimiter_global, delimiter.c_str());\n  return strtok(text_to_cut_global, text_delimiter_global);\n}");
return["cut_text("+b.replace(/'/g,'"')+", "+a.replace(/'/g,'"')+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.text_cut_delimiter_next=function(a){return["strtok(NULL, text_delimiter_global)",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.time={};Blockly.Arduino.time_delay=function(a){return"delay("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MILI",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_delaymicros=function(a){return"delayMicroseconds("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MICRO",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_millis=function(a){return["millis()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.time_micros=function(a){return["micros()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.infinite_loop=function(a){return"while(true);\n"};Blockly.Arduino.tone={};Blockly.Arduino.io_tone=function(a){var b=a.getFieldValue("TONEPIN"),c=Blockly.Arduino.valueToCode(a,"FREQUENCY",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"tone("+b+","+c+");\n"};
Blockly.Arduino.io_notone=function(a){var b=a.getFieldValue("TONEPIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"noTone("+b+");\n"};Blockly.Arduino.variables={};Blockly.Arduino.variables_get=function(a){return[Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.variables_set=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Arduino.valueToCode(a,"value",Blockly.Arduino.ORDER_ATOMIC);return b+" = "+a+";\n"};
Blockly.Arduino.variables_define=function(a){var b=a.getFieldValue("var_category"),c=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),d=Blockly.Arduino.getArduinoType_(Blockly.Types[a.getFieldValue("VARIABLE_SETTYPE_TYPE")]),e=Blockly.Arduino.valueToCode(a,"value",Blockly.Arduino.ORDER_ATOMIC);a="";d=d+" "+c+" = "+e+";";"local"==b?a=d+"\n":"global"==b&&Blockly.Arduino.addVariable(c,d,!0);return a};
Blockly.Arduino.variables_set_type=function(a){var b=Blockly.Arduino.valueToCode(a,"VARIABLE_SETTYPE_INPUT",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return["("+Blockly.Arduino.getArduinoType_(Blockly.Types[a.getFieldValue("VARIABLE_SETTYPE_TYPE")])+")("+b+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.eeprom_write=function(a){a="eeprom_write("+Blockly.Arduino.valueToCode(a,"string_to_write",Blockly.Arduino.ORDER_ATOMIC)+");\n";Blockly.Arduino.addInclude("eeprom","#include <EEPROM.h>");Blockly.Arduino.addFunction("eeprom_write",'void eeprom_write(String string_to_write) {\n  int strlen = string_to_write.length() + 1; //+1 in length for \'\\0\' char for string termination\n  if(strlen > 512) {\n    Serial.println("ERROR: String too long for writing to EEPROM - Maximum 255 characters allowed!");\n    return;\n  }\n  byte bytes_of_string[strlen];\n  string_to_write.getBytes(bytes_of_string, strlen);\n  for (int z = 0; z < strlen; z++){\n    if((char)bytes_of_string[z] != (char)EEPROM.read(z)) //if the correct char is already in EEPROM - NO writing to avoid unnecessary Hardware wastage\n      EEPROM.write(z, bytes_of_string[z]);\n  }\n  EEPROM.commit();\n  Serial.println("Saved String \'" + string_to_write + "\' to EEPROM");\n}');
Blockly.Arduino.addSetup("eeprom_begin","EEPROM.begin(512);",!0);return a};
Blockly.Arduino.eeprom_read=function(a){Blockly.Arduino.valueToCode(a,"string_to_load",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addInclude("eeprom","#include <EEPROM.h>");Blockly.Arduino.addFunction("eeprom_read","String eeprom_read() {\n  int char_count = 0;\n  while ((char)EEPROM.read(char_count) != '\\0') {\n    char_count++;\n  };\n  char* string_to_read = (char*) calloc(char_count,sizeof(char));\n  for (int z = 0; z <= char_count; z++){\n    string_to_read[z] = (char)EEPROM.read(z);\n  }\n  return String(string_to_read);\n}");Blockly.Arduino.addSetup("eeprom_begin",
"EEPROM.begin(512);",!0);return["eeprom_read()",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.webserver={};
Blockly.Arduino.webserver_start=function(a){var b=a.getFieldValue("Webserver Port");a=Blockly.Arduino.statementToCode(a,"Webserver_blocks");b=""==b?"80":b;var c="WebServer server("+b+");";var d='server.begin();\n  Serial.print("Webserver started at IP Address ");\n  Serial.print(WiFi.localIP());\n  Serial.println(" and Port '+(b+'");\n  Serial.print("Use http://");\n  Serial.print(WiFi.localIP());\n  ');d+="80"==b?'Serial.println("/ to access");':'Serial.println(":'+b+'/ to access");';Blockly.Arduino.addInclude("webserver",
"#include <WebServer.h>");Blockly.Arduino.addVariable("webserver_define",c,!0);Blockly.Arduino.addSetup("webserver_blocks",a,!0);Blockly.Arduino.addSetup("webserver_start",d,!0);return"server.handleClient();\n"};
Blockly.Arduino.handle_url=function(a){var b=a.getFieldValue("Page"),c=""!=b?b.replace(/\//g,"_"):"default";a=Blockly.Arduino.statementToCode(a,"Handle_URL_blocks");a="void webserver_handle_"+c+"() {\n"+a+"}";b='server.on("/'+b+'", webserver_handle_'+c+");";Blockly.Arduino.addFunction("webserver_handle_function_"+c,a);Blockly.Arduino.addSetup("webserver_handle_"+c,b,!0);return""};
Blockly.Arduino.handle_url_with_authentication=function(a){var b=a.getFieldValue("Page"),c=""!=b?b.replace(/\//g,"_"):"default",d=Blockly.Arduino.statementToCode(a,"Handle_URL_blocks"),e=Blockly.Arduino.valueToCode(a,"Username",Blockly.Arduino.ORDER_ATOMIC);a=Blockly.Arduino.valueToCode(a,"Password",Blockly.Arduino.ORDER_ATOMIC);d="void webserver_handle_"+c+"() {\n"+d+"}";b='server.on("/'+b+'", [](){\n    if(!server.authenticate('+(e+", "+a+"))\n      return server.requestAuthentication();\n    ");
b+="webserver_handle_"+c+"();\n  });";Blockly.Arduino.addFunction("webserver_handle_function_"+c,d);Blockly.Arduino.addSetup("webserver_handle_"+c,b,!0);return""};Blockly.Arduino.handle_url_notfound=function(a){a="void webserver_handle_notfound() {\n"+Blockly.Arduino.statementToCode(a,"Handle_URL_notfound_blocks")+"}";Blockly.Arduino.addFunction("webserver_handle_function_notfound",a);Blockly.Arduino.addSetup("webserver_handle_notfound","server.onNotFound(webserver_handle_notfound);",!0);return""};
Blockly.Arduino.server_send=function(a){var b=a.getFieldValue("statecode"),c=a.getFieldValue("content_type");a=Blockly.Arduino.valueToCode(a,"server_send_content",Blockly.Arduino.ORDER_ATOMIC);return"server.send("+b+', "'+c+'", '+a+");\n"};Blockly.Arduino.wifi={};
Blockly.Arduino.connect_to_wlan=function(a){var b=a.getFieldValue("SSID");a=a.getFieldValue("Key");var c='Serial.print("Connecting to WLAN Network: '+b+'");';b='char* ssid = "'+b+'";';var d='const char* key = "'+a+'";',e="WiFi.mode(WIFI_STA);\n  ";e=""==a?e+"WiFi.begin(ssid);":e+"WiFi.begin(ssid, key);";Blockly.Arduino.addInclude("wifi","#include <WiFi.h>");Blockly.Arduino.addVariable("ssid",b,!0);Blockly.Arduino.addVariable("key",d,!0);Blockly.Arduino.addSetup("wifi_Comm_Prep",c,!0);Blockly.Arduino.addSetup("wifi_Connect",
e,!0);Blockly.Arduino.addSetup("wifi_WaitForConnection",'while (WiFi.status() != WL_CONNECTED) {\n\tdelay(500);\n\tSerial.print(".");\n  }',!0);Blockly.Arduino.addSetup("wifi_Comm_Est",'Serial.println();\n  Serial.println("WLAN connected!");\n  Serial.print("Your IP address: ");\n  Serial.println(WiFi.localIP());',!0);return""};
Blockly.Arduino.start_wlan_access_point=function(a){var b=a.getFieldValue("SSID"),c=a.getFieldValue("Key");a='Serial.println("Setting up Access Point: '+b+'");\n';b='char* ssid = "'+b+'";';c='const char* key = "'+c+'";';Blockly.Arduino.addInclude("wifi","#include <WiFi.h>");Blockly.Arduino.addVariable("ssid",b,!0);Blockly.Arduino.addVariable("key",c,!0);Blockly.Arduino.addSetup("wifi_Comm_Prep",a,!0);Blockly.Arduino.addSetup("wifi_Connect","WiFi.mode(WIFI_AP);\n  WiFi.softAP(ssid, key);\n",!0);Blockly.Arduino.addSetup("wifi_AP_Est",
'IPAddress AP_IP = WiFi.softAPIP();\n  Serial.print("AP IP Address: ");\n  Serial.println(AP_IP);\n',!0);return""};